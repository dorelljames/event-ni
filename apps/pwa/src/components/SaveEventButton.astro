---
interface Props {
  eventId: string;
  isSaved?: boolean;
}

const { eventId, isSaved = false } = Astro.props;
---

<button
  type="button"
  class:list={[
    "inline-flex items-center px-3 py-1.5 rounded-full text-sm transition-colors",
    isSaved 
      ? "bg-blue-100 text-blue-800 hover:bg-blue-200" 
      : "bg-gray-100 text-gray-800 hover:bg-gray-200"
  ]}
  data-event-id={eventId}
  data-saved={isSaved}
  id={`save-event-${eventId}`}
>
  <svg 
    class="w-4 h-4 mr-1" 
    fill={isSaved ? "currentColor" : "none"} 
    stroke="currentColor" 
    viewBox="0 0 24 24"
  >
    <path 
      stroke-linecap="round" 
      stroke-linejoin="round" 
      stroke-width="2" 
      d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z" 
    />
  </svg>
  <span>{isSaved ? 'Saved' : 'Save'}</span>
</button>

<script>
  import { addToSyncQueue } from '../store/syncQueue';

  // Handle save/unsave actions
  document.querySelectorAll('[data-event-id]').forEach(button => {
    button.addEventListener('click', async (e) => {
      const btn = e.currentTarget as HTMLButtonElement;
      const eventId = btn.dataset.eventId!;
      const isSaved = btn.dataset.saved === 'true';
      
      // Update UI immediately
      btn.dataset.saved = (!isSaved).toString();
      btn.querySelector('span')!.textContent = isSaved ? 'Save' : 'Saved';
      btn.querySelector('svg')!.setAttribute('fill', isSaved ? 'none' : 'currentColor');
      
      // Add to sync queue
      addToSyncQueue({
        action: isSaved ? 'unsave' : 'save',
        eventId,
      });
    });
  });

  // Listen for sync complete messages
  navigator.serviceWorker?.addEventListener('message', (event) => {
    if (event.data.type === 'SYNC_COMPLETE') {
      const { item } = event.data;
      const button = document.getElementById(`save-event-${item.eventId}`);
      if (button) {
        button.dataset.saved = (item.action === 'save').toString();
      }
    }
  });
</script> 